#Wed Sep 22 09:46:51 CEST 2010
eclipse.preferences.version=1
org.eclipse.php.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8"?><templates><template autoinsert\="true" context\="php" deleted\="false" description\="Work with i5/OS active jobs" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5ActiveJobs" name\="i5ActiveJobs">/*&\#13;\nThis template allows to retrieve  i5/OS active jobs entries&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens active job list&\#13;\n3. Gets array for an acive job entry &\#13;\n4. Closes handle received from i5_job_list function&\#13;\n5. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t    \=&gt; '${job_name}',\t       // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t    \=&gt; '${sql_naming}',\t       // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',    // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t        \=&gt; '${alias}',\t\t           // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t    \=&gt; '${init_libl}'\t           // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n&\#13;\n    $$elements \= array(&\#13;\n    // JOBNAME      \=&gt; '${job_name}', &\#13;\n    // JOBUSER      \=&gt; '${job_user}',&\#13;\n    // JOBNUMBER \=&gt; '${job_number}',&\#13;\n    // JOBTYPE       \=&gt; '${job_type}',&\#13;\n    // DIRECTION   \=&gt; '${direction}' //(default is current job)  &\#13;\n    );&\#13;\n&\#13;\n    //connection - result of i5_connect  &\#13;\n&\#13;\n    $$jobs \= i5_job_list($$elements);&\#13;\n&\#13;\n    if (is_resource($$jobs)) { &\#13;\n    \t// Use i5_job_list_read function to retrieve the job entries from this handle&\#13;\n\t    $$job_read \= i5_job_list_read($$jobs);&\#13;\n&\#13;\n\t    if (is_array($$job_read)) {     \t    \t&\#13;\n\t    \t// $$job_read variable contains array of active job entries\t&\#13;\n\t        ${cursor} // INSERT YOUR CODE HERE \!\!\!&\#13;\n\t    } &\#13;\n\t    &\#13;\n\t    else {&\#13;\n        \t// Failed to get array for an active job entry, need to close the job list and the i5 connection     &\#13;\n        }&\#13;\n    } &\#13;\n    &\#13;\n    else {     &\#13;\n    \t// Failed to open active job list, use i5_errormsg() to get the failure reason and close the connection to i5 server &\#13;\n    }&\#13;\n&\#13;\n    if (\!i5_job_list_close($$jobs)) {&\#13;\n        // Failed to close handle received from i5_job_list(), use i5_errormsg() to get the failure reason and close the connection to i5 server&\#13;\n    }&\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }&\#13;\n} &\#13;\n&\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Connect to i5/OS server" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5Connect" name\="i5Connect">/*&\#13;\nThis template allows to connect to i5/OS server&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME  \t\=&gt;     '${job_name}',\t       // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt;     '${sql_naming}',        // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',    // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\=&gt;             '${alias}',\t               // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\=&gt;         '${init_libl}'                 // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n    ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Create i5/OS data area" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DataAreaCreate" name\="i5DataAreaCreate">/*&\#13;\nThis template allows to create i5/OS data area&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Creates data area of given size&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t&\#13;\n\t$$data_area \= i5_data_area_create('${library_name}/${data_area_name}', ${size});&\#13;\n    &\#13;\n\tif ($$data_area \=\=\= true) {&\#13;\n    \t${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to create the data area, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Delete i5/OS data area" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DataAreaDelete" name\="i5DataAreaDelete">/*&\#13;\nThis template allows to delete i5/OS data area&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Deletes data area&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t&\#13;\n\t$$del \= i5_data_area_delete('${library_name}/${data_area_name}');&\#13;\n    &\#13;\n\tif ($$del \=\=\= true) {&\#13;\n    \t${cursor} // ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to delete the data area, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS data area" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DataAreaRead" name\="i5DataAreaRead">/*&\#13;\nThis template allows to read i5/OS data area&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Reads from data area&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',     // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\=&gt; '${alias}',\t      // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\=&gt; '${init_libl}'\t      // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t// $$data variable contains data string from the data area&\#13;\n\t$$data \= i5_data_area_read('${library_name}/${data_area_name}'/*, '${offset}', '${length}'*/);&\#13;\n    &\#13;\n\tif (is_string($$data)) {&\#13;\n    \t${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to read from data area, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Write i5/OS data area" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DataAreaWrite" name\="i5DataAreaWrite">/*&\#13;\nThis template allows to write i5/OS data area&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Writes to data area&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t// $$data variable contains data string from the data area&\#13;\n\t$$ret \= i5_data_area_write('${library_name}/${data_area_name}', '${value}'/*, '${offset}', '${length}'*/);&\#13;\n    &\#13;\n\tif ($$ret \=\=\= true) {&\#13;\n    \t${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to write to the data area, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS data queue without key" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DtaqRecieve" name\="i5DtaqRecieve">/*&\#13;\nThis template allows to read i5/OS data queue without key&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Reads data from the data queue without key&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n    &\#13;\n  /*PHP-format program description. This should be provided if the program is not described on server.&\#13;\n    Name - name of the field&\#13;\n&\#13;\n    ype - type of the field, can be\:&\#13;\n    I5_TYPE_CHAR&\#13;\n    I5_TYPE_INT&\#13;\n    I5_TYPE_PACKED&\#13;\n    I5_TYPE_ZONED&\#13;\n    I5_TYPE_FLOAT&\#13;\n    I5_TYPE_BYTE&\#13;\n    I5_TYPE_STRUCT&\#13;\n    &\#13;\n    IO can be\:&\#13;\n    I5_IN&\#13;\n    I5_OUT&\#13;\n    I5_INOUT&\#13;\n    &\#13;\n    Length\:&\#13;\n    for CHAR, BYTE - integer describing length. Length can be number or name of the variable holding the length in the data structure.&\#13;\n    for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n    for STRUCT - array containing data definition of the structure&\#13;\n    for INT, FLOAT - ignored&\#13;\n&\#13;\n    Count (optional) - repetition count if the field is an array&\#13;\n    CountRef (optional) - reference to the repetition count if the field is an array*/&\#13;\n&\#13;\n    $$description \= array ('Name' \=&gt; '${var}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length'\=&gt; '${len}');&\#13;\n              &\#13;\n    $$dtaq \= i5_dtaq_prepare('${library_name}/${queue_name}', $$description); &\#13;\n    &\#13;\n    if (is_resource($$dtaq)) {&\#13;\n    \t&\#13;\n        $$data \= i5_dtaq_receive($$dtaq);&\#13;\n        &\#13;\n        if ($$data \=\=\! false) {&\#13;\n    \t    // $$data variable contains data that received from the queue&\#13;\n    \t    ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    \t}&\#13;\n        &\#13;\n    \telse {&\#13;\n            // Failed to read data from the data queue&\#13;\n        }&\#13;\n        &\#13;\n    \tif (\!i5_dtaq_close ($$dtaq)) {&\#13;\n    \t\t// Failed to free program resource handle, use i5_errormsg() to get the failure reason&\#13;\n    \t}       &\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n    \t// Failed to read data from the data queue, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n&\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n}  &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS data queue with key" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DtaqRecieveKey" name\="i5DtaqRecieveKey">/*&\#13;\nThis template allows to readi5/OS data queue with key&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Reads data from the data queue with key&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n    &\#13;\n  /*PHP-format program description. This should be provided if the program is not described on server.&\#13;\n    Name - name of the field&\#13;\n&\#13;\n    ype - type of the field, can be\:&\#13;\n    I5_TYPE_CHAR&\#13;\n    I5_TYPE_INT&\#13;\n    I5_TYPE_PACKED&\#13;\n    I5_TYPE_ZONED&\#13;\n    I5_TYPE_FLOAT&\#13;\n    I5_TYPE_BYTE&\#13;\n    I5_TYPE_STRUCT&\#13;\n    &\#13;\n    IO can be\:&\#13;\n    I5_IN&\#13;\n    I5_OUT&\#13;\n    I5_INOUT&\#13;\n    &\#13;\n    Length\:&\#13;\n    for CHAR, BYTE - integer describing length. Length can be number or name of the variable holding the length in the data structure.&\#13;\n    for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n    for STRUCT - array containing data definition of the structure&\#13;\n    for INT, FLOAT - ignored&\#13;\n&\#13;\n    Count (optional) - repetition count if the field is an array&\#13;\n    CountRef (optional) - reference to the repetition count if the field is an array*/&\#13;\n&\#13;\n    $$description \= array ('Name' \=&gt; '${var}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length'\=&gt; '${len}');&\#13;\n              &\#13;\n    $$dtaq \= i5_dtaq_prepare('${library_name}/${queue_name}', $$description, '${key_length}'); &\#13;\n    &\#13;\n    if (is_resource($$dtaq)) {&\#13;\n    \t&\#13;\n        $$data \= i5_dtaq_receive($$dtaq, '${operator}', '${key}');&\#13;\n    \t&\#13;\n        if ($$data \=\=\! false) {&\#13;\n            // $$data variable contains data that received from the queue&\#13;\n    \t    ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    \t}&\#13;\n    \t&\#13;\n    \telse {&\#13;\n    \t    // Failed to read data from the data queue&\#13;\n    \t}&\#13;\n        &\#13;\n    \tif (\!i5_dtaq_close ($$dtaq)) {&\#13;\n    \t\t// Failed to free program resource handle, use i5_errormsg() to get the failure reason&\#13;\n    \t}       &\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n    \t// Failed to read data from the data queue, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n&\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n}  &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Write i5/OS data queue without key" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DtaqSend" name\="i5DtaqSend">/*&\#13;\nThis template allows to write i5/OS data queue without key&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Puts data to the data queue without key&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n    &\#13;\n  /*PHP-format program description. This should be provided if the program is not described on server.&\#13;\n    Name - name of the field&\#13;\n&\#13;\n    ype - type of the field, can be\:&\#13;\n    I5_TYPE_CHAR&\#13;\n    I5_TYPE_INT&\#13;\n    I5_TYPE_PACKED&\#13;\n    I5_TYPE_ZONED&\#13;\n    I5_TYPE_FLOAT&\#13;\n    I5_TYPE_BYTE&\#13;\n    I5_TYPE_STRUCT&\#13;\n    &\#13;\n    IO can be\:&\#13;\n    I5_IN&\#13;\n    I5_OUT&\#13;\n    I5_INOUT&\#13;\n    &\#13;\n    Length\:&\#13;\n    for CHAR, BYTE - integer describing length. Length can be number or name of the variable holding the length in the data structure.&\#13;\n    for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n    for STRUCT - array containing data definition of the structure&\#13;\n    for INT, FLOAT - ignored&\#13;\n&\#13;\n    Count (optional) - repetition count if the field is an array&\#13;\n    CountRef (optional) - reference to the repetition count if the field is an array*/&\#13;\n&\#13;\n    $$description \= array ('Name' \=&gt; '${var}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length'\=&gt; '${len}');&\#13;\n              &\#13;\n    $$dtaq \= i5_dtaq_prepare('${library_name}/${queue_name}', $$description); &\#13;\n    &\#13;\n    if (is_resource($$dtaq)) {&\#13;\n    \t&\#13;\n        $$ret \= i5_dtaq_send($$dtaq, '', '${data_send}') ;&\#13;\n        &\#13;\n        if ($$ret \=\=\= true) {&\#13;\n    \t    &\#13;\n    \t    ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    \t}&\#13;\n        &\#13;\n    \telse {&\#13;\n            // Failed to put data to the data queue, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n        &\#13;\n    \tif (\!i5_dtaq_close ($$dtaq)) {&\#13;\n    \t\t// Failed to free program resource handle, use i5_errormsg() to get the failure reason&\#13;\n    \t}       &\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n    \t// Failed to read data from the data queue, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n&\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n}  &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Write i5/OS data queue with key" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5DtaqSendKey" name\="i5DtaqSendKey">/*&\#13;\nThis template allows to write i5/OS data queue without key&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Puts data to the data queue without key&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n    &\#13;\n  /*PHP-format program description. This should be provided if the program is not described on server.&\#13;\n    Name - name of the field&\#13;\n&\#13;\n    ype - type of the field, can be\:&\#13;\n    I5_TYPE_CHAR&\#13;\n    I5_TYPE_INT&\#13;\n    I5_TYPE_PACKED&\#13;\n    I5_TYPE_ZONED&\#13;\n    I5_TYPE_FLOAT&\#13;\n    I5_TYPE_BYTE&\#13;\n    I5_TYPE_STRUCT&\#13;\n    &\#13;\n    IO can be\:&\#13;\n    I5_IN&\#13;\n    I5_OUT&\#13;\n    I5_INOUT&\#13;\n    &\#13;\n    Length\:&\#13;\n    for CHAR, BYTE - integer describing length. Length can be number or name of the variable holding the length in the data structure.&\#13;\n    for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n    for STRUCT - array containing data definition of the structure&\#13;\n    for INT, FLOAT - ignored&\#13;\n&\#13;\n    Count (optional) - repetition count if the field is an array&\#13;\n    CountRef (optional) - reference to the repetition count if the field is an array*/&\#13;\n&\#13;\n    $$description \= array ('Name' \=&gt; '${var}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length'\=&gt; '${len}');&\#13;\n              &\#13;\n    $$dtaq \= i5_dtaq_prepare('${library_name}/${queue_name}', $$description, '${key_length}'); &\#13;\n    &\#13;\n    if (is_resource($$dtaq)) {&\#13;\n    \t&\#13;\n        $$ret \= i5_dtaq_send($$dtaq, '${key}', '${data_send}') ;&\#13;\n        &\#13;\n        if ($$ret \=\=\= true) {&\#13;\n    \t    &\#13;\n    \t    ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    \t}&\#13;\n        &\#13;\n    \telse {&\#13;\n            // Failed to put data to the data queue, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n        &\#13;\n    \tif (\!i5_dtaq_close ($$dtaq)) {&\#13;\n    \t\t// Failed to free program resource handle, use i5_errormsg() to get the failure reason&\#13;\n    \t}       &\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n    \t// Failed to read data from the data queue, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n&\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }   &\#13;\n}  &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS job log" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5JobLogs" name\="i5JobLogs">/*&\#13;\nThis template allows to read i5/OS job log &\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens job log&\#13;\n3. Gets array for a job log entry  &\#13;\n4. Closes handle received from i5_jobLog_list function&\#13;\n5. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job__name}',\t   // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n&\#13;\n    $$elements \= array(&\#13;\n    // JOBNAME   \=&gt; '${job_name}', &\#13;\n    // JOBUSER   \=&gt; '${job_user}',&\#13;\n    // JOBNUMBER \=&gt; '${job_number}',&\#13;\n    // JOBTYPE   \=&gt; '${job_type}',&\#13;\n    // DIRECTION \=&gt; '${direction}' //(default is current job)  &\#13;\n    );&\#13;\n&\#13;\n    //connection - result of i5_connect  &\#13;\n&\#13;\n    $$jobLog \= i5_jobLog_list($$elements);&\#13;\n&\#13;\n    if (is_resource($$jobLog)) { &\#13;\n    \t// Use i5_jobLog_list_read function to retrieve the job entries from this handle&\#13;\n\t    $$jobLog_read \= i5_jobLog_list_read($$jobLog);&\#13;\n&\#13;\n\t    if (is_array($$jobLog_read)) {     \t    \t&\#13;\n\t    \t// $$jobLog_read variable contains array for a job log entry \t&\#13;\n\t        ${cursor} // INSERT YOUR CODE HERE \!\!\!&\#13;\n\t    } &\#13;\n\t    &\#13;\n\t    else {&\#13;\n        \t// Failed to get array for a job log entry , need to close the job log list and the i5 connection     &\#13;\n        }&\#13;\n    } &\#13;\n    &\#13;\n    else {     &\#13;\n    \t// Failed to open job log, use i5_errormsg() to get the failure reason and close the connection to i5 server &\#13;\n    }&\#13;\n&\#13;\n    if (\!i5_jobLog_list_close($$jobLog)) {&\#13;\n        // Failed to close handle received from i5_jobLog_list function, use i5_errormsg() to get the failure reason and close the connection to i5 server&\#13;\n    }&\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }&\#13;\n} &\#13;\n&\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Work with i5/OS objects" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5ObjectListing" name\="i5ObjectListing">/*&\#13;\nThis template allows to get array with objects elements from the object list &\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens object list &\#13;\n3. Gets for a object list entry   &\#13;\n4. Closes handle received from i5_objects_list function&\#13;\n5. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t  // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t  // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {  &\#13;\n&\#13;\n    $$objects \= i5_objects_list('${library}'/*, '${type}', '${name}' */);&\#13;\n&\#13;\n    if (is_resource($$objects)) { &\#13;\n    \t// Use i5_objects_list_read function to retrieve object records&\#13;\n\t    $$obj_read \= i5_objects_list_read($$objects);&\#13;\n&\#13;\n\t    if (is_array($$obj_read)) {     \t    \t&\#13;\n\t    \t// $$obj_read variable contains array with the message element for a object list entry  \t&\#13;\n\t        ${cursor}// INSERT YOUR CODE HERE \!\!\!&\#13;\n\t    } &\#13;\n\t    &\#13;\n\t    else {&\#13;\n        \t// Failed to get array for object list entry , need to close the job log list and the i5 connection     &\#13;\n        }&\#13;\n    } &\#13;\n    &\#13;\n    else {     &\#13;\n    \t// Failed to open object list, use i5_errormsg() to get the failure reason and close the connection to i5 server &\#13;\n    }&\#13;\n&\#13;\n    if (\!i5_objects_list_close($$objects)) {&\#13;\n        // Failed to close handle received from i5_objects_list function, use i5_errormsg() to get the failure reason and close the connection to i5 server&\#13;\n    }&\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }&\#13;\n} &\#13;\n&\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Call i5/OS program" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5Program" name\="i5Program">/*&\#13;\nThis template allows to call any i5/OS program with parameters&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens a program or service procedure and prepares it to be run&\#13;\n3. Calls the program and optionally accepts results  &\#13;\n4. Free program resource handle &\#13;\n5. Closes connection to i5 server */&\#13;\n&\#13;\n// Set connection parameters\:&\#13;\n// If you want to use additional connection options, remove comments in the array block  &\#13;\n&\#13;\n$$connection_parameters \= array(&\#13;\n// I5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n// I5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',     // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n// I5_OPTIONS_DECIMALPOINT  \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n// I5_OPTIONS_CODEPAGEFILE  \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n// I5_OPTIONS_ALIAS\t\t    \=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n// I5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t      // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}'/*, $$connection_parameters*/);&\#13;\nif (is_resource($$conn)) {&\#13;\n\t    &\#13;\n /* Prepare File for execution &\#13;\n    PHP-format program description&\#13;\n    This should be provided if the program is not described on server &\#13;\n    &\#13;\n    Name - name of the field&\#13;\n    &\#13;\n    Type - type of the field, can be\: &\#13;\n    I5_TYPE_CHAR&\#13;\n    I5_TYPE_INT&\#13;\n    I5_TYPE_PACKED&\#13;\n    I5_TYPE_ZONED&\#13;\n    I5_TYPE_FLOAT&\#13;\n    I5_TYPE_BYTE&\#13;\n    I5_TYPE_STRUCT&\#13;\n    &\#13;\n    IO can be\:&\#13;\n    I5_IN&\#13;\n    I5_OUT&\#13;\n    I5_INOUT&\#13;\n    &\#13;\n    Length\:&\#13;\n    for CHAR, BYTE - integer describing length. Length can be number or name of the &lt;var_iable holding the length in the data structure.&\#13;\n    for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n    for STRUCT - array containing data definition of the structure&\#13;\n    for INT, FLOAT - ignored&\#13;\n    &\#13;\n    Count (optional) - repetition count if the field is an array&\#13;\n    CountRef (optional) - reference to the repetition count if the field is an array */&\#13;\n&\#13;\n    $$description \= Array (&\#13;\n    array ('Name' \=&gt; '${name_0}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_0}'),&\#13;\n    array ('Name' \=&gt; '${name_1}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_1}')//,&\#13;\n // array ('Name' \=&gt; '${name_2}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_2}'),&\#13;\n // array ('Name' \=&gt; '${name_3}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_3}'),&\#13;\n // array ('Name' \=&gt; '${name_4}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_4}'),&\#13;\n // array ('Name' \=&gt; '${name_5}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_5}'),&\#13;\n // array ('Name' \=&gt; '${name_6}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_6}'),&\#13;\n // array ('Name' \=&gt; '${name_7}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_7}'),&\#13;\n // array ('Name' \=&gt; '${name_8}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_8}'),&\#13;\n // array ('Name' \=&gt; '${name_9}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_9}')&\#13;\n    );&\#13;\n    &\#13;\n    $$prog \= i5_program_prepare('${library_name}/${prog_name}', $$description); &\#13;\n&\#13;\n    if (is_resource($$prog)) {   &\#13;\n    &\#13;\n     /* Execute Program */&\#13;\n        $$params \= array (&\#13;\n         '${name_0}' \=&gt; $$var_0, '${name_1}' \=&gt; $$var_1//,&\#13;\n     // '${name_2}' \=&gt; $$var_2, '${name_3}' \=&gt; $$var_3,&\#13;\n     // '${name_4}' \=&gt; $$var_4, '${name_5}' \=&gt; $$var_5,&\#13;\n     // '${name_6}' \=&gt; $$var_6, '${name_7}' \=&gt; $$var_7,&\#13;\n     // '${name_8}' \=&gt; $$var_8, '${name_9}' \=&gt; $$var_9&\#13;\n        );&\#13;\n           &\#13;\n        $$retvals \= array(&\#13;\n        '${name_0}' \=&gt; '${retval_0}', '${name_1}' \=&gt; '${retval_1}'//,&\#13;\n     // '${name_2}' \=&gt; '${retval_2}', '${name_3}' \=&gt; '${retval_3}',&\#13;\n     // '${name_4}' \=&gt; '${retval_4}', '${name_5}' \=&gt; '${retval_5}',&\#13;\n     // '${name_6}' \=&gt; '${retval_6}', '${name_7}' \=&gt; '${retval_7}',&\#13;\n     // '${name_8}' \=&gt; '${retval_8}', '${name_9}' \=&gt; '${retval_9}'&\#13;\n        );&\#13;\n&\#13;\n        $$ret \= i5_program_call($$prog, $$params, $$retvals) ;&\#13;\n&\#13;\n        if ($$ret \=\=\= true) {&\#13;\n                &\#13;\n             ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n        } &\#13;\n            &\#13;\n        else {&\#13;\n             // Failed to call the program, use i5_errormsg() to get the failure reason&\#13;\n        } &\#13;\n                &\#13;\n        if (\!i5_program_close ($$prog) ) {&\#13;\n             // Failed to free program resource handle, use i5_errormsg() to get the failure reason&\#13;\n        }  &\#13;\n    } &\#13;\n      &\#13;\n    else {&\#13;\n        // Program prepare failed, use i5_errormsg() to get the failure reason      &\#13;\n        }   &\#13;\n\t&\#13;\n    if (\!i5_close($$conn)) {&\#13;\n            // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n}&\#13;\n&\#13;\nelse {&\#13;\n\t// Failed to connect to i5 server,  use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Create a Web service for i5/OS program" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5ProgramService" name\="i5ProgramService">/*&\#13;\nThis template creates Web Service allowing to invoke an i5/OS program &\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens a program or service procedure and prepares it to be run&\#13;\n3. Calls the program and optionally accepts results  &\#13;\n4. Free program resource handle &\#13;\n5. Closes connection to i5 server &\#13;\n&\#13;\n*/&\#13;\n&\#13;\n/*&\#13;\n\t * @param string $$var_0&\#13;\n\t * @param string $$var_1&\#13;\n\t */&\#13;\n\t &\#13;\nclass i5_program_service {&\#13;\n\t&\#13;\n\tprivate $$conn \= false;&\#13;\n&\#13;\n\tfunction __construct() {&\#13;\n\t    &\#13;\n\t\t// Set connection parameters\:&\#13;\n        // If you want to use additional connection options, remove comments in the array block  &\#13;\n&\#13;\n        $$connection_parameters \= array(&\#13;\n        // I5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t\t  // Define machine name by default&\#13;\n        // I5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',     // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n        // I5_OPTIONS_DECIMALPOINT  \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n        // I5_OPTIONS_CODEPAGEFILE  \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n        // I5_OPTIONS_ALIAS\t\t    \=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n        // I5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t  // Specifies initial library&\#13;\n        );&\#13;\n&\#13;\n        $$this-&gt;conn \= i5_connect('127.0.0.1', '${user_name}', '${password}'/*, $$connection_parameters*/);&\#13;\n        if (\!is_resource($$this-&gt;conn)) {&\#13;\n\t\t     throw new SoapFault('i5_program_service', 'Connection to i5 server failed, use i5_errormsg() to get the failure reason');&\#13;\n\t    }&\#13;\n\t\t&\#13;\n\t}&\#13;\n\t&\#13;\n\tpublic function service_for_i5_program($$var_0, $$var_1 /*, $$var_2, $$var_3, $$var_4, $$var_5, $$var_6, $$var_7, $$var_8, $$var_9 */) {&\#13;\n&\#13;\n     /* Prepare File for execution &\#13;\n        PHP-format program description&\#13;\n        This should be provided if the program is not described on server &\#13;\n    &\#13;\n        Name - name of the field&\#13;\n    &\#13;\n        Type - type of the field, can be\: &\#13;\n        I5_TYPE_CHAR&\#13;\n        I5_TYPE_INT&\#13;\n        I5_TYPE_PACKED&\#13;\n        I5_TYPE_ZONED&\#13;\n        I5_TYPE_FLOAT&\#13;\n        I5_TYPE_BYTE&\#13;\n        I5_TYPE_STRUCT&\#13;\n    &\#13;\n        IO can be\:&\#13;\n        I5_IN&\#13;\n        I5_OUT&\#13;\n        I5_INOUT&\#13;\n    &\#13;\n        Length\:&\#13;\n        for CHAR, BYTE - integer describing length. Length can be number or name of the &lt;var_iable holding the length in the data structure.&\#13;\n        for PACKED, ZONED - string "NUMBER.NUMBER" defining length and precision&\#13;\n        for STRUCT - array containing data definition of the structure&\#13;\n        for INT, FLOAT - ignored&\#13;\n    &\#13;\n        Count (optional) - repetition count if the field is an array&\#13;\n        CountRef (optional) - reference to the repetition count if the field is an array */&\#13;\n&\#13;\n        $$description \= Array (&\#13;\n        array ('Name' \=&gt; '${name_0}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_0}'),&\#13;\n        array ('Name' \=&gt; '${name_1}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_1}')//,&\#13;\n     // array ('Name' \=&gt; '${name_2}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_2}'),&\#13;\n     // array ('Name' \=&gt; '${name_3}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_3}'),&\#13;\n     // array ('Name' \=&gt; '${name_4}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_4}'),&\#13;\n     // array ('Name' \=&gt; '${name_5}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_5}'),&\#13;\n     // array ('Name' \=&gt; '${name_6}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_6}'),&\#13;\n     // array ('Name' \=&gt; '${name_7}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_7}'),&\#13;\n     // array ('Name' \=&gt; '${name_8}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_8}'),&\#13;\n     // array ('Name' \=&gt; '${name_9}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_9}')&\#13;\n        );&\#13;\n    &\#13;\n        $$prog \= i5_program_prepare('${library_name}/${prog_name}', $$description, $$this-&gt;conn); &\#13;\n&\#13;\n        if (is_resource($$prog)) {   &\#13;\n    &\#13;\n         /* Execute Program */&\#13;\n            $$params \= array (&\#13;\n            '${name_0}' \=&gt; $$var_0, '${name_1}' \=&gt; $$var_1//,&\#13;\n         // '${name_2}' \=&gt; $$var_2, '${name_3}' \=&gt; $$var_3,&\#13;\n         //' ${name_4}' \=&gt; $$var_4, '${name_5}' \=&gt; $$var_5,&\#13;\n         // '${name_6}' \=&gt; $$var_6, '${name_7}' \=&gt; $$var_7,&\#13;\n         // '${name_8}' \=&gt; $$var_8, '${name_9}' \=&gt; $$var_9&\#13;\n            );&\#13;\n           &\#13;\n            $$retvals \= array(&\#13;\n            '${name_0}' \=&gt; ${retval_0}, ${name_1} \=&gt; '${retval_1}'//,&\#13;\n         // '${name_2}' \=&gt; ${retval_2}, ${name_3} \=&gt; '${retval_3}',&\#13;\n         // '${name_4}' \=&gt; ${retval_4}, ${name_5} \=&gt; '${retval_5}',&\#13;\n         // '${name_6}' \=&gt; ${retval_6}, ${name_7} \=&gt; '${retval_7}',&\#13;\n         // '${name_8}' \=&gt; ${retval_8}, ${name_9} \=&gt; '${retval_9}'&\#13;\n            );&\#13;\n&\#13;\n            $$ret \= i5_program_call($$prog, $$params, $$retvals) ;&\#13;\n&\#13;\n            if ($$ret \=\=\= true) {&\#13;\n                &\#13;\n                 ${cursor}// ENTER YOUR CODE HERE\!&\#13;\n            } &\#13;\n            &\#13;\n            else {&\#13;\n                throw new SoapFault('i5_program_service', 'Failed to call the program, use i5_errormsg() to get the failure reason');&\#13;\n            } &\#13;\n                &\#13;\n            if (\!i5_program_close ($$prog) ) {&\#13;\n                 throw new SoapFault('i5_program_service', 'Failed to free program resource handle, use i5_errormsg() to get the failure reason');&\#13;\n            }  &\#13;\n        } &\#13;\n      &\#13;\n        else {&\#13;\n            throw new SoapFault('i5_program_service', 'Program prepare failed, use i5_errormsg() to get the failure reason');      &\#13;\n        }   &\#13;\n\t}&\#13;\n&\#13;\n    function __destruct() {&\#13;\n    \t&\#13;\n    \tif (\!i5_close($$this-&gt;conn)) {&\#13;\n            // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n    }&\#13;\n&\#13;\n}&\#13;\n&\#13;\nini_set('soap.wsdl_cache_enabled', '0'); &\#13;\n$$server \= new SoapServer('i5_program_service.wsdl');&\#13;\n$$server-&gt;setClass('i5_program_service');&\#13;\n$$server-&gt;handle();&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS spooled file" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5Spool" name\="i5Spool">/*&\#13;\nThis template allows to get spooled file list and spooled file content&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Creates an spool file lists, of certain output queue or for all queues &\#13;\n3. Gets spool file data from the queue  &\#13;\n4. Get the data from the spool file &\#13;\n5. Free spool list resourse &\#13;\n6. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t  // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t  // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user__name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {  &\#13;\n    $$description \= array(&\#13;\n // 'username' \=&gt; '${user_name}',&\#13;\n // 'outq'     \=&gt; '${outq_name}',&\#13;\n // 'userdata' \=&gt; '${user_data}'&\#13;\n    );&\#13;\n    $$spool \= i5_spool_list(/* $$description */); &\#13;\n&\#13;\n    if (is_resource($$spool)) { &\#13;\n    \t&\#13;\n\t    $$spool_file \= i5_spool_list_read($$spool);&\#13;\n&\#13;\n\t    if (is_array($$spool_file)) {     \t    \t&\#13;\n\t    \t// $$spool_file contains spool file data from the queue \t&\#13;\n\t        ${cursor}// INSERT YOUR CODE HERE \!\!\! OR/AND DO THE NEXT\:&\#13;\n&\#13;\n\t        /* string i5_spool_get_data(string jobname, integer job_number, string username, string spool_name, integer spool_id [,string filename])    &\#13;\n               job_name - The name of the job that created the file&\#13;\n               job_number - The number of the job that created the file&\#13;\n               username - The username of the job that created the file&\#13;\n               spool_name - The spool file name&\#13;\n               spool_id - ID of the spool file in the queue (as returned by outq_read)&\#13;\n               filename - IFS filename to store the data. If not provided, the data is returned as string                  &\#13;\n            */&\#13;\n            $$data \= i5_spool_get_data($$spool_file['SPLFNAME'], &\#13;\n                                      $$spool_file['JOBNAME'], &\#13;\n                                      $$spool_file['USERNAME'], &\#13;\n                                      $$spool_file['JOBNBR'], "*LAST" );&\#13;\n&\#13;\n            if (is_string($$data)) {&\#13;\n            \t// $$data variable contains data string from the spool file&\#13;\n            \t// ENTER YOUR CODE HERE\!&\#13;\n            }&\#13;\n            &\#13;\n            else {&\#13;\n            \t// Failed to get the data from the spool file, use i5_errormsg() to to get the failure reason. Need to close the spool list and the connection to i5 server&\#13;\n            }      &\#13;\n\t    } &\#13;\n\t    &\#13;\n\t    else {&\#13;\n        \t// Failed to get spool file data from the queue  , need to close the spool list and the i5 connection     &\#13;\n        }&\#13;\n    } &\#13;\n    &\#13;\n    else {     &\#13;\n    \t// Failed to create an spool file lists, use i5_errormsg() to get the failure reason and close the connection to i5 server &\#13;\n    }&\#13;\n&\#13;\n    if (\!i5_spool_list_close($$spool)) {&\#13;\n        // Failed to free spool list resourse , use i5_errormsg() to get the failure reason and close the connection to i5 server&\#13;\n    }&\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }&\#13;\n} &\#13;\n&\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}&\#13;</template><template autoinsert\="true" context\="php" deleted\="false" description\="Create i5/OS user space" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5UserspaceCreate" name\="i5UserspaceCreate">/*&\#13;\nThis template allows to create i5/OS user space object&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Creates new user space object&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t  // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t  // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t&\#13;\n /* property - &\#13;\n    I5_INITSIZE - The initial size of the user space being created. This value must be from 1 byte to 16, 776, 704 bytes &\#13;\n    I5_DESCRIPTION - user space description &\#13;\n    I5_INIT_VALUE - The initial value of all bytes in the user space. &\#13;\n    I5_EXTEND_ATTRIBUT - extended attribute. The extended attribute must be a valid *NAME. For example, an object type of *FILE has an extended attribute of PF (physical file), LF (logical file), DSPF (display file), SAVF (save file), and so on. &\#13;\n    I5_AUTHORITY - The authority you give users who do not have specific private or group authority to the user space &\#13;\n    I5_LIBNAME - Library name where the user space is located &\#13;\n    I5_NAME - User space name (10 char max) */&\#13;\n\t&\#13;\n    $$property \= array(&\#13;\n\t            I5_INITSIZE        \=&gt; '${init_size}', &\#13;\n\t\t\t\tI5_DESCRIPTION     \=&gt; '${description}',&\#13;\n\t\t\t\tI5_INIT_VALUE      \=&gt; '${init_value}',&\#13;\n\t\t\t\tI5_EXTEND_ATTRIBUT \=&gt; '${extend_attribut}',&\#13;\n\t\t\t\tI5_AUTHORITY       \=&gt; '${authority}',&\#13;\n\t\t\t\tI5_LIBNAME         \=&gt; '${lib_name}',&\#13;\n\t\t\t\tI5_NAME            \=&gt; '${name}'&\#13;\n\t            );&\#13;\n\t$$user_space \= i5_userspace_create($$property);&\#13;\n    &\#13;\n\tif ($$user_space \=\=\= true) {&\#13;\n    \t${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to create the user space, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Delete i5/OS user space" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5UserspaceDelete" name\="i5UserspaceDelete">/*&\#13;\nThis template allows to delete i5/OS user space object&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Deletes user space object&\#13;\n3. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t  // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t\t  // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t&\#13;\n /* property - &\#13;\n    I5_INITSIZE - The initial size of the user space being created. This value must be from 1 byte to 16, 776, 704 bytes &\#13;\n    I5_DESCRIPTION - user space description &\#13;\n    I5_INIT_VALUE - The initial value of all bytes in the user space. &\#13;\n    I5_EXTEND_ATTRIBUT - extended attribute. The extended attribute must be a valid *NAME. For example, an object type of *FILE has an extended attribute of PF (physical file), LF (logical file), DSPF (display file), SAVF (save file), and so on. &\#13;\n    I5_AUTHORITY - The authority you give users who do not have specific private or group authority to the user space &\#13;\n    I5_LIBNAME - Library name where the user space is located &\#13;\n    I5_NAME - User space name (10 char max) */&\#13;\n\t&\#13;\n    $$ret \= i5_command('DLTUSRSPC USRSPC(${library_name}/${userspace})');&\#13;\n    &\#13;\n\tif ($$ret \=\=\= true) {&\#13;\n    \t${cursor}// ENTER YOUR CODE HERE\!&\#13;\n    }&\#13;\n    &\#13;\n    else {&\#13;\n        // Failed to delete user space, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n    &\#13;\n    if (\!i5_close($$conn)) {&\#13;\n        // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n    }  &\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Read i5/OS user space " enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5UserspaceGet" name\="i5UserspaceGet">/*&\#13;\nThis template allows to read i5/OS user space &\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens a user space and prepares it to be run&\#13;\n3. Retrieves user space data&\#13;\n4. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\=&gt; '${job_name}',\t      // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\=&gt; '${sql_naming}',\t  // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',  // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\=&gt; '${alias}',\t\t  // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\=&gt; '${init_libl}'\t  // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t$$description \= Array(&\#13;\n    array('Name' \=&gt;' ${name_0}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_0}'),&\#13;\n    array('Name' \=&gt; '${name_1}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_1}'),&\#13;\n // array('Name' \=&gt; '${name_2}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_2}'),&\#13;\n // array('Name' \=&gt; '${name_3}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_3}'),&\#13;\n // array('Name' \=&gt; '${name_4}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_4}')&\#13;\n\t);&\#13;\n                &\#13;\n    $$uspc \= i5_userspace_prepare('${library_name}/${userspace}', $$description);&\#13;\n    &\#13;\n\tif ($$uspc \=\=\= true) {&\#13;\n\t\t$$parmOut \= array(&\#13;\n\t\t           '${name_0}' \=&gt; '${parm_0}', &\#13;\n\t\t           '${name_1}' \=&gt; '${parm_1}',&\#13;\n                // '${name_2}' \=&gt; '${parm_2}',&\#13;\n                // '${name_3}' \=&gt; '${parm_3}',&\#13;\n                // '${name_4}' \=&gt; '${parm_4}'&\#13;\n                   );&\#13;\n\t\t$$ret \= i5_userspace_get($$uspc, $$parmOut); &\#13;\n\t\t&\#13;\n\t\tif ($$ret \=\=\= true) {&\#13;\n    \t   ${cursor} // ENTER YOUR CODE HERE\!&\#13;\n\t\t}&\#13;\n&\#13;\n        else {&\#13;\n    \t    // Failed to retrieve user space data, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n    &\#13;\n        if (\!i5_close($$conn)) {&\#13;\n            // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n        }  &\#13;\n\t}&\#13;\n\telse {&\#13;\n\t\t// Failed to open the user space, use i5_errormsg() to get the failure reason&\#13;\n\t}&\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Write i5/OS user space" enabled\="true" id\="com.zend.php.ui.editor.templates.php.i5.i5UserspacePut" name\="i5UserspacePut">/*&\#13;\nThis template allows to write i5/OS user space&\#13;\n&\#13;\n1. Conects to i5 server&\#13;\n2. Opens a user space and prepares it to be run&\#13;\n3. Adds user space data&\#13;\n4. Closes connection to i5 server&\#13;\n&\#13;\nIf you want to use additional connection options, remove comments in the  array block&\#13;\n*/&\#13;\n&\#13;\n// Set connection parameters&\#13;\n$$connection_parameters \= array(&\#13;\n//\tI5_OPTIONS_JOBNAME \t\t\t\=&gt; '${job_name}',\t       // Define machine name by default&\#13;\n//\tI5_OPTIONS_SQLNAMING \t\t\=&gt; '${sql_naming}',\t \t   // To use dotted (.) or slashed (/) notation in SQL requests&\#13;\n//\tI5_OPTIONS_DECIMALPOINT \=&gt; '${decimal_point}',    // To use dot or comma as decimal separator&\#13;\n//\tI5_OPTIONS_CODEPAGEFILE \=&gt; '${code_page_file}', // To use a specific code page&\#13;\n//\tI5_OPTIONS_ALIAS\t\t\t\t\=&gt; '${alias}',\t\t\t   \t   // Enables naming a connection&\#13;\n//\tI5_OPTIONS_INITLIBL\t\t\t\=&gt; '${init_libl}'\t\t\t\t   // Specifies initial library&\#13;\n);&\#13;\n&\#13;\n$$conn \= i5_connect('127.0.0.1', '${user_name}', '${password}', $$connection_parameters);&\#13;\n&\#13;\nif (is_resource($$conn)) {&\#13;\n\t$$description \= Array(&\#13;\n    array('Name' \=&gt; '${name_0}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_0}'),&\#13;\n    array('Name' \=&gt; '${name_1}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_1}'),&\#13;\n // array('Name' \=&gt; '${name_2}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_2}'),&\#13;\n // array('Name' \=&gt; '${name_3}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_3}'),&\#13;\n // array('Name' \=&gt; '${name_4}', 'IO' \=&gt; I5_INOUT, 'Type' \=&gt; I5_TYPE_CHAR, 'Length' \=&gt; '${len_4}')&\#13;\n\t);&\#13;\n                &\#13;\n    $$uspc \= i5_userspace_prepare('${library_name}/${userspace}', $$description);&\#13;\n    &\#13;\n\tif ($$uspc \=\=\= true) {&\#13;\n\t\t$$parmOut \= array(&\#13;\n\t\t'${name_0}' \=&gt; '${data_0}', &\#13;\n\t\t'${name_1}' \=&gt; '${data_1}',&\#13;\n     // '${name_2}' \=&gt; '${data_2}',&\#13;\n     // '${name_3}' \=&gt; '${data_3}',&\#13;\n     // '${name_4}' \=&gt; '${data_4}'&\#13;\n        );&\#13;\n\t\t$$ret \= i5_userspace_put($$uspc, $$parameter); &\#13;\n\t\t&\#13;\n\t\tif ($$ret \=\=\= true) {&\#13;\n    \t    ${cursor} // ENTER YOUR CODE HERE\!&\#13;\n\t\t}&\#13;\n&\#13;\n        else {&\#13;\n    \t    // Failed to retrieve user space data, use i5_errormsg() to get the failure reason&\#13;\n        }&\#13;\n    &\#13;\n        if (\!i5_close($$conn)) {&\#13;\n            // Failed to disconnect from i5 server, use i5_errormsg() to get the failure reason&\#13;\n        }  &\#13;\n\t}&\#13;\n\telse {&\#13;\n\t\t// Failed to open the user space, use i5_errormsg() to get the failure reason&\#13;\n\t}&\#13;\n}&\#13;\n    &\#13;\nelse {&\#13;\n\t// Connection to i5 server failed, use i5_errormsg() to get the failure reason&\#13;\n}</template><template autoinsert\="true" context\="php" deleted\="false" description\="Getter Body" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.getterbody" name\="getterbody">return ${field};</template><template autoinsert\="false" context\="php" deleted\="false" description\="Setter Body" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.setterbody" name\="setterbody">${field} \= ${param};\nreturn $$this;</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for getter methods" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.gettercomment" name\="gettercomment">/**\n * @return the ${bare_field_name}\n */</template><template autoinsert\="false" context\="phpcomment" deleted\="false" description\="Comment for setter methods" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.settercomment" name\="settercomment">/**\n * @param ${param} the ${bare_field_name} to set\n * @return ${class}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for created constructors" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.constructorcomment" name\="constructorcomment">/**\n * ${tags}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for created PHP files" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.filecomment" name\="filecomment">/**\n * \n */\n</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for created types" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.typecomment" name\="typecomment">/**\n * @author ${user}\n *\n * ${tags}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for fields" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.fieldcomment" name\="fieldcomment">/**\n * @var ${field_type}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for variables" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.varcomment" name\="varcomment">/* @var ${field} ${field_type} */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for non-overriding methods" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.methodcomment" name\="methodcomment">/**\n * ${cursor}${tags}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for overriding methods" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.overridecomment" name\="overridecomment">/* (non-PHPdoc)\n * ${see_to_overridden}\n */</template><template autoinsert\="true" context\="phpcomment" deleted\="false" description\="Comment for delegate methods" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.codetemplates.delegatecomment" name\="delegatecomment">/**\n * ${tags}\n * ${see_to_target}\n */</template><template autoinsert\="false" context\="php" deleted\="false" description\="print an expression" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print" name\="pr">print ${};\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="print a string" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print.string" name\="prs">print "${}";\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="print with new line" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print.newline" name\="prln">print ${}."\\n";\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="print a value" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print.variable" name\="prv">print("\\${dollar}${variable} \= ". ${dollar}${variable});\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="prints the current function name" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print.functionName" name\="prf">print("${function_container}");\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="prints the current class name" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.print.className" name\="prc">print("${class_container}");\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="echo a string" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.echo" name\="eco">echo("${}");\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="iterates an array" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.arrayIterator" name\="iter">for (${dollar}${number_variable} \= 0 ; ${dollar}${number_variable} &lt; count(${dollar}${array_variable}) ; ${dollar}${number_variable}++) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="instanceof statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.instanceof" name\="inst">if (${dollar}${variable} instanceof ${class}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="for statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.for" name\="for">for (${dollar}${index} \= 0; ${dollar}${index} &lt; ${number_variable}; ${dollar}${index}++) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="false" context\="php" deleted\="false" description\="foreach statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.foreach" name\="fore">foreach (${dollar}${array_expression} as ${dollar}${value}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="foreach with key statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.foreachkey" name\="forek">foreach (${dollar}${array_expression} as ${dollar}${key} \=&gt; ${dollar}${value}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="switch statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.switch" name\="swi">switch (${dollar}${variable}) {\n\tcase ${value}\:\n\t${cursor};\n\tbreak;\n\t\n\tdefault\:\n\t\t;\n\tbreak;\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="function statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.fnc" name\="fnc">function ${function_name}() {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="function statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.function" name\="function">function ${function_name}() {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="lambda function statement (closure)" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.lambda" name\="lambda">function (${parameters}) use (${lexical_variables}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="lambda function statement (closure)" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.closure" name\="closure">function (${parameters}) use (${lexical_variables}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="class statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.cls" name\="cls">class ${class_name} {\n\tfunction ${function_name}() {\n\t\t${cursor};\n\t}\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="class statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.class" name\="class">class ${class_name} {\n\tfunction ${function_name}() {\n\t\t${cursor};\n\t}\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="if statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.if" name\="if">if (${condition}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="else statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.else" name\="els">else {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="elseif statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.elif" name\="elif">elseif (${condition}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="try catch block" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.try" name\="try">try {\n\t${cursor}\n} catch (${Exception} ${dollar}e) {\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="while loop" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.while" name\="while">while (${condition}) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="iterates a directory" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.itdir" name\="itdir">${dollar}${dirh} \= opendir(${dirname});\nif (${dollar}${dirh}) {\n\twhile (${dollar}${dir_element} \= readdir(${dollar}${dirh})) {\n\t\t${cursor};\n\t}\n\tunset(${dollar}${dir_element});\n\tclosedir(${dollar}${dirh});\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="mysql_fetch_row() loop" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.mySql.fr" name\="my_fr">while (${dollar}${row} \= mysql_fetch_row(${dollar}${query})) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="mysql_fetch_array() loop" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.mySql.fa" name\="my_fa">while (${dollar}${row} \= mysql_fetch_array(${dollar}${query})) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="mysql_fetch_object() loop" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.mySql.fo" name\="my_fo">while (${dollar}${row} \= mysql_fetch_object(${dollar}${query})) {\n\t${cursor};\n}\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="Trap code output" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.my_gc" name\="my_gc">ob_start();\n\t\n${cursor};\n\n${dollar}${contents} \= ob_get_contents();\nob_end_clean();\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="Clone an object" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.cln" name\="cln">${dollar}${new_obj} \= clone ${dollar}${variable};\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="Call parent constructor" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.pcon" name\="pcon">parent\:\:__construct();\n${cursor}</template><template autoinsert\="false" context\="php" deleted\="false" description\="Call parent's clone" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.pclon" name\="pclon">parent\:\:__clone();\n</template><template autoinsert\="false" context\="php" deleted\="false" description\="use statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.use" name\="use">use ${namespace} as ${alias};</template><template autoinsert\="false" context\="php" deleted\="false" description\="namespace statement" enabled\="true" id\="org.eclipse.php.ui.editor.templates.php.ns" name\="ns">namespace ${name};</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="Simple php file" enabled\="true" id\="org.eclipse.php.ui.editor.templates.newPhp.author" name\="New simple PHP file">&lt;?php\n${cursor}</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="html 4.01 frameset" enabled\="true" id\="org.eclipse.php.ui.editor.templates.newPhp.html.frameset" name\="New PHP file - HTML frameset">&lt;\!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv\="Content-Type" content\="text/html; charset\=${encoding}"&gt;\n&lt;title&gt;Insert title here&lt;/title&gt;\n&lt;/head&gt;\n&lt;frameset&gt;\n    &lt;frame&gt;\n    &lt;frame&gt;\n    &lt;noframes&gt;\n    &lt;body&gt;\n    &lt;p&gt;This page uses frames. The current browser you are using does not support frames.&lt;/p&gt;\n    &lt;?php\n${cursor}\n\t?&gt;\n    &lt;/body&gt;\n    &lt;/noframes&gt;\n&lt;/frameset&gt;\n&lt;/html&gt;</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="Zend Controller" enabled\="true" id\="org.zend.php.framework.templates.zend.controller" name\="New Zend Controller">&lt;?php\n\n/**\n * {0}\n * \n * @author\n * @version \n */\n\t\nrequire_once 'Zend/Controller/Action.php';\n\nclass {0} extends Zend_Controller_Action\n{\n\t/**\n\t * The default action - show the home page\n\t */\n    public function indexAction() \n    {\n        // TODO Auto-generated {0}\:\:indexAction() default action\n    }\n    ${cursor}\n}\n\n</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="Zend Table" enabled\="true" id\="org.zend.php.framework.templates.zend.model" name\="New Zend Table">&lt;?php\n\n/**\n * {0}\n *  \n * @author ${user}\n * @version \n */\n\t\nrequire_once 'Zend/Db/Table/Abstract.php';\n\nclass {0} extends Zend_Db_Table_Abstract\n{\n\t/**\n\t * The default table name \n\t */\n    protected $$_name \= '{1}';\n    ${cursor}\n}\n\n</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="Zend View Helper" enabled\="true" id\="org.zend.php.framework.templates.zend.viewHelper" name\="New Zend View Helper">&lt;?php\n/**\n *\n * @author ${user}\n * @version \n */\nrequire_once 'Zend/View/Interface.php';\n\n/**\n * {1} helper\n *\n * @uses viewHelper {0}\n */\nclass {0}_{1} \n{\n\n\t/**\n\t * @var Zend_View_Interface \n\t */\n\tpublic $$view;\n\n\t/**\n\t *  \n\t */\n\tpublic function {2}() {\n\t\t${cursor}// TODO Auto-generated {0}_{1}\:\:{2}() helper \n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the view field \n\t * @param $$view Zend_View_Interface\n\t */\n\tpublic function setView(Zend_View_Interface $$view) {\n\t\t$$this-&gt;view \= $$view;\n\t}\n}\n\n</template><template autoinsert\="true" context\="newPhp" deleted\="false" description\="Zend Action Helper" enabled\="true" id\="org.zend.php.framework.templates.zend.actionHelper" name\="New Zend Action Helper">&lt;?php\n/**\n *\n * @author ${user}\n * @version \n */\nrequire_once 'Zend/Loader/PluginLoader.php';\nrequire_once 'Zend/Controller/Action/Helper/Abstract.php';\n\n/**\n * {1} Action Helper \n * \n * @uses actionHelper {0}\n */\nclass {0}_{1} extends {3}\n{\n    /**\n     * @var Zend_Loader_PluginLoader\n     */\n    public $$pluginLoader;\n\n    /**\n     * Constructor\: initialize plugin loader\n     * \n     * @return void\n     */\n    public function __construct(){\n        // TODO Auto-generated Constructor\n        $$this-&gt;pluginLoader \= new Zend_Loader_PluginLoader();\n    }\n    \n    /**\n     * Strategy pattern\: call helper as broker method\n     */\n    public function direct(){\n    \t// TODO Auto-generated 'direct' method\n    }\n}\n\n</template></templates>
